{"version":3,"sources":["actions/index.js","components/Favorites/Favorites.js","components/Buscador/Buscador.js","logoMovie.png","components/NavBar/NavBar.js","components/Movie/Movie.js","App.js","serviceWorker.js","reducers/index.js","store/index.js","index.js"],"names":["APIKEY","process","ConnectedList","className","this","props","movies","map","m","to","imdbID","Title","src","Poster","alt","onClick","removeMovieFavorite","Component","connect","state","moviesFavourites","idMovie","type","payload","Buscador","title","event","setState","target","value","preventDefault","getMovies","onSubmit","e","handleSubmit","htmlFor","placeholder","id","autoComplete","onChange","handleChange","addMovieFavorite","moviesLoaded","dispatch","movie","titulo","fetch","then","response","json","NavBar","useState","home","favourites","profile","help","settings","password","signout","isHovering","setIsHovering","handleMouseOver","handleMouseOut","onMouseOver","onMouseOut","exact","name","href","Movie","getMovieDetail","match","params","Plot","Genre","imdbRating","Released","React","movieDetail","data","App","Fragment","path","component","Favorites","Boolean","window","location","hostname","initialState","rootReducer","action","concat","Search","filter","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.39291682.chunk.js","sourcesContent":["// let apiKey = \"f6771740\";\nconst APIKEY = process.env.REACT_APP_MOVIES_API_KEY\n\nexport function getMovies(titulo) {\n  return function (dispatch) {\n    fetch(`https://www.omdbapi.com/?apikey=${APIKEY}&s=` + titulo)\n      .then((response) => response.json())\n      .then((json) => {\n        dispatch({\n          type: \"GET_MOVIES\",\n          payload: json\n        });\n      });\n  };\n}\n\nexport function addMovieFavorite(payload) {\n  return {\n    type: \"ADD_MOVIE_FAVORITE\",\n    payload\n  };\n}\n\nexport function removeMovieFavorite(idMovie) {\n  return {\n    type: \"REMOVE_MOVIE_FAVORITE\",\n    payload: idMovie\n  }\n}\n\nexport function getMovieDetail(idMovie) {\n  return function (dispatch) {\n    fetch(`https://www.omdbapi.com/?apikey=${APIKEY}&i=` + idMovie)\n      .then((response) => response.json())\n      .then(data => {\n        dispatch({\n          type: \"GET_MOVIE_DETAIL\",\n          payload: data\n        })\n      })\n  }\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeMovieFavorite } from \"../../actions\";\nimport { Link } from 'react-router-dom';\nimport './Favorites.css';\n\nexport class ConnectedList extends Component {\n\n  render() {\n    return (\n      <div className=\"favs-container\">\n        <h2>Pel√≠culas Favoritas</h2>\n        <ul>\n          {/* Aqui deberias poner tu lista de peliculas! */}\n          {\n            this.props.movies?.map(m => (\n              <div key={m.imdbID}>\n                <Link to={`/movie/${m.imdbID}`}>\n                  <li>{m.Title}</li>\n                  <img src={`${m.Poster}`} alt=\"Poster\"></img>\n                  <li>{m.Poster}</li>\n                </Link>\n                <button\n                  className=\"boton\"\n                  onClick={() => this.props.removeMovieFavorite(m.imdbID)}>\n                  <div>\n                    <span>Eliminar</span>\n                  </div>\n                </button>\n              </div>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.moviesFavourites,\n  };\n}\n\n\nexport default connect(mapStateToProps, { removeMovieFavorite })(ConnectedList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./Buscador.css\";\nimport { getMovies, addMovieFavorite } from \"../../actions\";\nimport { getMovieDetail } from '../../actions/index';\nexport class Buscador extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n    };\n    // this.handleSubmit = this.handleSubmit.bind(this)\n  }\n  handleChange(event) {\n    this.setState({ title: event.target.value });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.getMovies(this.state.title)\n  }\n\n  render() {\n    const { title } = this.state;\n    return (\n      <div className=\"form\">\n        <h2>Encuentra tus pel√≠culas favoritas</h2>\n        <form className=\"form-container\" onSubmit={e => this.handleSubmit(e)}>\n          <div>\n            <label className=\"label\" htmlFor=\"title\">\n            </label>\n            <input\n              placeholder=\"Buscar pel√≠cula...\"\n              type=\"text\"\n              id=\"title\"\n              autoComplete=\"off\"\n              value={title}\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <button type=\"submit\" className=\"boton\">\n            <div>\n              <span>Buscar</span>\n            </div>\n          </button>\n        </form>\n        <ul>\n          {/* Aqui tienes que escribir tu codigo para mostrar la lista de peliculas */}\n          {\n            this.props.movies?.map(m => (\n              <div className=\"portada\" key={m.imdbID}>\n                <Link to={`/movie/${m.imdbID}`}>\n                  <li className=\"bottomLeft\">{m.Title}</li>\n                  <img className=\"img\" src={`${m.Poster}`} alt=\"Poster\"></img>\n                </Link>\n                <button\n                  className=\"boton fav\"\n                  onClick={() => this.props.addMovieFavorite({\n                    Title: m.Title,\n                    imdbID: m.imdbID\n                  })}>\n                  <div>\n                    <span>Fav</span>\n                  </div>\n                </button>\n              </div>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    movies: state.moviesLoaded,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addMovieFavorite: movie => dispatch(addMovieFavorite(movie)),\n    getMovies: title => dispatch(getMovies(title)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Buscador);\n","export default __webpack_public_path__ + \"static/media/logoMovie.0eabbf17.png\";","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Logo from \"../../logoMovie.png\";\n\nimport \"./Navbar.css\";\n\n\n\nexport default function NavBar() {\n  const [state, setState] = useState({\n    home: false,\n    favourites: false,\n    movies: false,\n    profile: false,\n    help: false,\n    settings: false,\n    password: false,\n    signout: false,\n  });\n  \n  const [isHovering, setIsHovering] = useState(false);\n\n\n  const handleMouseOver = () => {\n    setIsHovering(true);\n  }\n\n  const handleMouseOut = () => {\n    setIsHovering(false);\n  }\n\n  return (\n    <nav className=\"navigation\">\n      <ul>\n        <li id=\"home\" className={isHovering ? null : (state.home ? \"active\" : null)} \n        onClick={ () => setState({home: !state.home}) }\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}>\n          <NavLink exact to=\"/movies\">\n            <span className=\"icon\"><ion-icon name=\"home-outline\"></ion-icon></span>\n            <span className=\"title\">Inicio</span>\n            </NavLink>\n        </li>\n        <li id=\"favorites\" className={isHovering ? null : (state.favourites ? \"active\" : null)} \n        onClick={ () => setState({favourites: !state.favourites}) }\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}>\n          <NavLink to=\"/favs\">\n            <span className=\"icon\"><ion-icon name=\"star-outline\"></ion-icon></span>\n            <span className=\"title\">Favoritas</span>\n          </NavLink>\n        </li>\n        <li id=\"movies\" className={isHovering ? null : (state.movies ? \"active\" : null)}\n        onClick={ () => setState({movies: !state.movies}) }\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}>\n          <NavLink to=\"/movie/:id\" >\n            <span className=\"icon\"><ion-icon name=\"film-outline\"></ion-icon></span>\n            <span className=\"title\">Peliculas</span>\n          </NavLink>\n        </li>\n        <li id=\"profile\" className={isHovering ? null : (state.profile ? \"active\" : null)}\n        onClick={ () => setState({profile: !state.profile}) }\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}>\n          <a href=\"#\">\n            <span className=\"icon\"><ion-icon name=\"person-outline\"></ion-icon></span>\n            <span className=\"title\">Perfil</span>\n          </a>\n        </li>\n        <li id=\"help\" className={isHovering ? null : (state.help ? \"active\" : null)}\n        onClick={ () => setState({help: !state.help}) }\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}>\n          <a href=\"#\">\n            <span className=\"icon\"><ion-icon name=\"help-outline\"></ion-icon></span>\n            <span className=\"title\">Ayuda</span>\n          </a>\n        </li>\n        <li id=\"settings\" className={isHovering ? null : (state.settings ? \"active\" : null)}\n        onClick={ () => setState({settings: !state.settings}) }\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}>\n          <a href=\"#\">\n            <span className=\"icon\"><ion-icon name=\"settings-outline\"></ion-icon></span>\n            <span className=\"title\">Configuraci√≥n</span>\n          </a>\n        </li>\n        <li id=\"password\" className={isHovering ? null : (state.password ? \"active\" : null)}\n        onClick={ () => setState({password: !state.password}) }\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}>\n          <a href=\"#\">\n            <span className=\"icon\"><ion-icon name=\"lock-closed-outline\"></ion-icon></span>\n            <span className=\"title\">Contrase√±a</span>\n          </a>\n        </li>\n        <li id=\"signout\" className={isHovering ? null : (state.signout ? \"active\" : null)}\n        onClick={ () => setState({signout: !state.signout}) }\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}>\n          <a href=\"#\">\n            <span className=\"icon\"><ion-icon name=\"log-out-outline\"></ion-icon></span>\n            <span className=\"title\">Cerrar Sesi√≥n</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getMovieDetail } from '../../actions/index';\n\nimport './Movie.css';\n\nclass Movie extends React.Component {\n\n  componentDidMount() {\n    this.props.getMovieDetail(this.props.match.params.id)\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h3 className=\"title\">{this.props.movie.Title}</h3>\n        <div className=\"caja\">\n          <img className=\"img\" src={`${this.props.movie.Poster}`} alt=\"Poster\"></img>\n          <div className=\"details\">\n            <p className=\"description\">{this.props.movie.Plot}</p>\n            <p>Genre: {this.props.movie.Genre}</p>\n            <p>imdbRating: {this.props.movie.imdbRating}</p>\n            <p>Released: {this.props.movie.Released}</p>\n          </div>\n        </div>\n        <button className='boton'>\n          <div>\n            <Link to=\"/movies\">\n              <span>Atras</span>\n            </Link>\n          </div>\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    movie: state.movieDetail\n  }\n}\n\nexport default connect(mapStateToProps, { getMovieDetail })(Movie);","import React from \"react\";\n\nimport Favorites from \"./components/Favorites/Favorites\";\nimport Buscador from \"./components/Buscador/Buscador\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport { Route } from \"react-router-dom\";\nimport Movie from \"./components/Movie/Movie\";\n\nfunction App() {\n  return (\n      <React.Fragment>\n          <NavBar />\n          <Route exact path=\"/movies\" component={Buscador} />\n          <Route path=\"/favs\" component={Favorites} />\n          <Route path=\"/movie/:id\" component={Movie} />\n      </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n  moviesFavourites: [],\n  moviesLoaded: [],\n  movieDetail: {},\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === \"ADD_MOVIE_FAVORITE\") {\n    return {\n      ...state,\n      moviesFavourites: state.moviesFavourites.concat(action.payload),\n    };\n  }\n  if (action.type === \"GET_MOVIES\") {\n    return {\n      ...state,\n      moviesLoaded: action.payload.Search\n    };\n  }\n  if (action.type === \"REMOVE_MOVIE_FAVORITE\") {\n    return {\n      ...state,\n      moviesFavourites: state.moviesFavourites.filter(m => m.imdbID !== action.payload),\n    }\n  }\n  if (action.type === \"GET_MOVIE_DETAIL\") {\n    return {\n      ...state,\n      movieDetail: action.payload\n    }\n  }\n  return state;\n}\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}